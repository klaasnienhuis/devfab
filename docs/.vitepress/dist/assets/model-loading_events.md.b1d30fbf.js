import{_ as s,o as e,c as a,U as n}from"./chunks/framework.b64a190f.js";const h=JSON.parse('{"title":"Event listeners","description":"","frontmatter":{},"headers":[],"relativePath":"model-loading/events.md","filePath":"model-loading/events.md"}'),o={name:"model-loading/events.md"},t=n(`<h1 id="event-listeners" tabindex="-1">Event listeners <a class="header-anchor" href="#event-listeners" aria-label="Permalink to &quot;Event listeners&quot;">​</a></h1><p>The Sketchfab API offers a handful of event listeners. The one you&#39;ll use the most is the <code>viewerready</code> event. This event tells us when the viewer is ready (duh). This is important, because we can&#39;t do anything before. Once the viewer is ready we can access its scene data, for instance to find out how many materials there are in the scene.</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight has-highlighted-lines"><code><span class="line"><span style="color:#A6ACCD;">client</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">init</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">dGUrytaktlDeNudCEGKk31oTJY</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">autostart</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">success</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">api</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line highlighted"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">api</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">addEventListener</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">viewerready</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Viewer is ready</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">))</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">error</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">error</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Sketchfab API error</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><p>In this example <code>autostart: 1</code> starts playing the 3D model. The <code>viewerready</code> event tells us when the model is ready. From this moment on, we can &quot;talk&quot; to the model through the <code>api</code> object.</p><h2 id="entrypoint" tabindex="-1">Entrypoint <a class="header-anchor" href="#entrypoint" aria-label="Permalink to &quot;Entrypoint&quot;">​</a></h2><p>In practice, this is the entrypoint for some of your code when creating interactive experiences. Perhaps you want to set the background color or hide a bunch of objects directly after the model loads. You can put that code in the callback of the <code>viewerready</code> event.</p>`,6),l=[t];function p(r,c,i,y,D,F){return e(),a("div",null,l)}const A=s(o,[["render",p]]);export{h as __pageData,A as default};
